# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.
name: Build, Push and Run Docker image

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-push-run-image:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.repository_id }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ github.repository_id }}-

      - name: Build Docker image
        uses: docker/build-push-action@v3
        with:
          context: .
          push: false
          load: true
          tags: ${{ env.IMAGE_NAME }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max

      - name: Move cache
        # Temp fix
        # https://github.com/docker/build-push-action/issues/252
        # https://github.com/moby/buildkit/issues/1896
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

      - name: Setup the collector and observability backends
        run: docker-compose -f "otel-collector-compose.yaml" up -d --build

      - name: Build benchmarks
        uses: addnab/docker-run-action@v3
        with:
          image: ${{ env.IMAGE_NAME }}:latest
          run: |
            build_dir_tracing_off=/tmp/build_dir_tracing_off
            mkdir -p "$build_dir_tracing_off"
            cmake -B "$build_dir_tracing_off" -S . \
              -D CMAKE_BUILD_TYPE=Release \
              -D TRACING_ENABLED=OFF
            cmake --build "$build_dir_tracing_off" --target all --
            build_dir_opentelemetry_off=/tmp/build_dir_opentelemetry_off
            mkdir -p "$build_dir_opentelemetry_off"
            cmake -B "$build_dir_opentelemetry_off" -S . \
              -D CMAKE_BUILD_TYPE=Release \
              -D TRACING_ENABLED=ON \
              -D OPENTELEMETRY_C_TRACING_ENABLED=OFF
            cmake --build "$build_dir_opentelemetry_off" --target all --
            build_dir_lttng_exporter_on=/tmp/build_dir_lttng_exporter_on
            mkdir -p "$build_dir_lttng_exporter_on"
            cmake -B "$build_dir_lttng_exporter_on" -S . \
              -D CMAKE_BUILD_TYPE=Release \
              -D TRACING_ENABLED=ON \
              -D OPENTELEMETRY_C_TRACING_ENABLED=ON \
              -D LTTNG_EXPORTER_ENABLED=ON
            cmake --build "$build_dir_lttng_exporter_on" --target all --
            build_dir_lttng_exporter_off=/tmp/build_dir_lttng_exporter_off
            mkdir -p "$build_dir_lttng_exporter_off"
            cmake -B "$build_dir_lttng_exporter_off" -S . \
              -D CMAKE_BUILD_TYPE=Release \
              -D TRACING_ENABLED=ON \
              -D OPENTELEMETRY_C_TRACING_ENABLED=ON \
              -D LTTNG_EXPORTER_ENABLED=OFF
            cmake --build "$build_dir_lttng_exporter_off" --target all --

      - name: Stop containers
        if: always()
        run: docker-compose -f "otel-collector-compose.yaml" down
